name: Security Analysis

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_sonarcloud:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean install -DskipTests
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT }}
            -Dsonar.sources=.
            -Dsonar.language=java
            -Dsonar.java.binaries=.
            -Dsonar.exclusions=**/test/**
            -Dsonar.qualitygate.wait=true

      # - name: Generate Sonar Report
      #   run: | 
      #     RESULT=curl -u ${{ secrets.SONAR_TOKEN }}: \
      #       -X GET "https://sonarcloud.io/api/measures/component?componentKey=${{ secrets.SONAR_PROJECT }}&metricKeys=coverage" \
      #       -o sonar-report.json

      # - name: Upload Report
      #   if: always()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: sonar-analysis-report
      #     path: sonar-report.json

  dockerfile_docker_scout:
    needs: build_sonarcloud   
    runs-on: ubuntu-latest
    env:
      APP_NAME: frontend-maven-plugin
      VERSION: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v4

      # Login to Docker Hub (required for Docker Scout)
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ env.APP_NAME }}:${{ env.VERSION }} .
          docker tag ${{ env.APP_NAME }}:${{ env.VERSION }} ${{ env.APP_NAME }}:latest

      # Install Docker Scout CLI
      - name: Install Docker Scout
        run: |
          curl -sSfL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh | sh -s --

      # Run Docker Scout security scanning
      - name: Docker Scout Scanning
        env:
          DOCKER_SCOUT_HUB_USER: ${{ secrets.DOCKER_USERNAME }}
        run: |
          docker scout cves ${{ env.APP_NAME }}:${{ env.VERSION }} --output ./vulns.report
          # docker scout cves ${{ env.APP_NAME }}:${{ env.VERSION }} --only-severity critical --exit-code
          docker scout sbom --output ${{ env.APP_NAME }}.sbom ${{ env.APP_NAME }}:${{ env.VERSION }}


  run_snyk_analysis:
    needs: dockerfile_docker_scout
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Build with Maven
        run: mvn clean install -DskipTests
      - name: Snyk security analysis
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=critical --fail-on=all
        continue-on-error: false 
